using System;
using System.Threading;
using System.Collections.Generic;   

namespace MultiThrdApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // 2개의 쓰레드 실행
            Thread t1 = new Thread(() => MyClass.AddList(10));
            Thread t2 = new Thread(() => MyClass.AddList(20));
            t1.Start();
            t2.Start();

            // 2개의 쓰레드 실행완료까지 대기
            t1.Join();
            t2.Join();

            // 메인쓰레드에서 뮤텍스 사용
            using (Mutex m = new Mutex(false, "MutexName1"))
            {
                // 뮤텍스를 취득하기 위해 10 ms 대기
                if (m.WaitOne(10))
                {
                    // 뮤텍스 취득후 MyList 사용
                    MyClass.MyList.Add(30);
                }
                else
                {
                    Console.WriteLine("Cannot acquire mutex");
                }
            }

            MyClass.ShowList();
        }
    }

    public class MyClass
    {
        // MutexName1 이라는 뮤텍스 생성
        private static Mutex mtx = new Mutex(false, "MutexName1");

        // 데이타 멤버
        public static List<int> MyList = new List<int>(); 

        // 데이타를 리스트에 추가
        public static void AddList(int val)
        {
            // 먼저 뮤텍스를 취득할 때까지 대기
            mtx.WaitOne();

            // 뮤텍스 취득후 실행 블럭
            MyList.Add(val);         
   
            // 뮤텍스 해제
            mtx.ReleaseMutex();
        }

        // 리스트 출력
        public static void ShowList()
        {
            MyList.ForEach(p => Console.WriteLine(p));
        }
    }
}
